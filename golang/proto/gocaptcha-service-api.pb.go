// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: gocaptcha-service-api.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDataRequest) Reset() {
	*x = GetDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gocaptcha_service_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataRequest) ProtoMessage() {}

func (x *GetDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gocaptcha_service_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataRequest.ProtoReflect.Descriptor instead.
func (*GetDataRequest) Descriptor() ([]byte, []int) {
	return file_gocaptcha_service_api_proto_rawDescGZIP(), []int{0}
}

func (x *GetDataRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code              int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message           string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Id                string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	CaptchaKey        string `protobuf:"bytes,4,opt,name=captchaKey,proto3" json:"captchaKey,omitempty"`
	MasterImageBase64 string `protobuf:"bytes,5,opt,name=masterImageBase64,proto3" json:"masterImageBase64,omitempty"`
	ThumbImageBase64  string `protobuf:"bytes,6,opt,name=thumbImageBase64,proto3" json:"thumbImageBase64,omitempty"`
	MasterWidth       int32  `protobuf:"varint,7,opt,name=masterWidth,proto3" json:"masterWidth,omitempty"`
	MasterHeight      int32  `protobuf:"varint,8,opt,name=masterHeight,proto3" json:"masterHeight,omitempty"`
	ThumbWidth        int32  `protobuf:"varint,9,opt,name=thumbWidth,proto3" json:"thumbWidth,omitempty"`
	ThumbHeight       int32  `protobuf:"varint,10,opt,name=thumbHeight,proto3" json:"thumbHeight,omitempty"`
	ThumbSize         int32  `protobuf:"varint,11,opt,name=thumbSize,proto3" json:"thumbSize,omitempty"`
	DisplayX          int32  `protobuf:"varint,12,opt,name=displayX,proto3" json:"displayX,omitempty"`
	DisplayY          int32  `protobuf:"varint,13,opt,name=displayY,proto3" json:"displayY,omitempty"`
}

func (x *GetDataResponse) Reset() {
	*x = GetDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gocaptcha_service_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataResponse) ProtoMessage() {}

func (x *GetDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gocaptcha_service_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataResponse.ProtoReflect.Descriptor instead.
func (*GetDataResponse) Descriptor() ([]byte, []int) {
	return file_gocaptcha_service_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetDataResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetDataResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetDataResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDataResponse) GetCaptchaKey() string {
	if x != nil {
		return x.CaptchaKey
	}
	return ""
}

func (x *GetDataResponse) GetMasterImageBase64() string {
	if x != nil {
		return x.MasterImageBase64
	}
	return ""
}

func (x *GetDataResponse) GetThumbImageBase64() string {
	if x != nil {
		return x.ThumbImageBase64
	}
	return ""
}

func (x *GetDataResponse) GetMasterWidth() int32 {
	if x != nil {
		return x.MasterWidth
	}
	return 0
}

func (x *GetDataResponse) GetMasterHeight() int32 {
	if x != nil {
		return x.MasterHeight
	}
	return 0
}

func (x *GetDataResponse) GetThumbWidth() int32 {
	if x != nil {
		return x.ThumbWidth
	}
	return 0
}

func (x *GetDataResponse) GetThumbHeight() int32 {
	if x != nil {
		return x.ThumbHeight
	}
	return 0
}

func (x *GetDataResponse) GetThumbSize() int32 {
	if x != nil {
		return x.ThumbSize
	}
	return 0
}

func (x *GetDataResponse) GetDisplayX() int32 {
	if x != nil {
		return x.DisplayX
	}
	return 0
}

func (x *GetDataResponse) GetDisplayY() int32 {
	if x != nil {
		return x.DisplayY
	}
	return 0
}

type CheckDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CaptchaKey string `protobuf:"bytes,2,opt,name=captchaKey,proto3" json:"captchaKey,omitempty"`
	Value      string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CheckDataRequest) Reset() {
	*x = CheckDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gocaptcha_service_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDataRequest) ProtoMessage() {}

func (x *CheckDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gocaptcha_service_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDataRequest.ProtoReflect.Descriptor instead.
func (*CheckDataRequest) Descriptor() ([]byte, []int) {
	return file_gocaptcha_service_api_proto_rawDescGZIP(), []int{2}
}

func (x *CheckDataRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CheckDataRequest) GetCaptchaKey() string {
	if x != nil {
		return x.CaptchaKey
	}
	return ""
}

func (x *CheckDataRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type CheckDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CheckDataResponse) Reset() {
	*x = CheckDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gocaptcha_service_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDataResponse) ProtoMessage() {}

func (x *CheckDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gocaptcha_service_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDataResponse.ProtoReflect.Descriptor instead.
func (*CheckDataResponse) Descriptor() ([]byte, []int) {
	return file_gocaptcha_service_api_proto_rawDescGZIP(), []int{3}
}

func (x *CheckDataResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckDataResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CheckDataResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type StatusInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaptchaKey string `protobuf:"bytes,1,opt,name=captchaKey,proto3" json:"captchaKey,omitempty"`
}

func (x *StatusInfoRequest) Reset() {
	*x = StatusInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gocaptcha_service_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusInfoRequest) ProtoMessage() {}

func (x *StatusInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gocaptcha_service_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusInfoRequest.ProtoReflect.Descriptor instead.
func (*StatusInfoRequest) Descriptor() ([]byte, []int) {
	return file_gocaptcha_service_api_proto_rawDescGZIP(), []int{4}
}

func (x *StatusInfoRequest) GetCaptchaKey() string {
	if x != nil {
		return x.CaptchaKey
	}
	return ""
}

type StatusInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StatusInfoResponse) Reset() {
	*x = StatusInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gocaptcha_service_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusInfoResponse) ProtoMessage() {}

func (x *StatusInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gocaptcha_service_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusInfoResponse.ProtoReflect.Descriptor instead.
func (*StatusInfoResponse) Descriptor() ([]byte, []int) {
	return file_gocaptcha_service_api_proto_rawDescGZIP(), []int{5}
}

func (x *StatusInfoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *StatusInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StatusInfoResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_gocaptcha_service_api_proto protoreflect.FileDescriptor

var file_gocaptcha_service_api_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x67, 0x6f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x67,
	0x6f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa7, 0x03, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x11,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x36,
	0x34, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x58, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x58, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x59, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x59, 0x22, 0x58, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61,
	0x70, 0x74, 0x63, 0x68, 0x61, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x55,
	0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x33, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61,
	0x70, 0x74, 0x63, 0x68, 0x61, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x4b, 0x65, 0x79, 0x22, 0x56, 0x0a, 0x12, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x32, 0x8e, 0x03, 0x0a, 0x10, 0x47, 0x6f, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x19, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x67, 0x6f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x09, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x70,
	0x74, 0x63, 0x68, 0x61, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68,
	0x61, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gocaptcha_service_api_proto_rawDescOnce sync.Once
	file_gocaptcha_service_api_proto_rawDescData = file_gocaptcha_service_api_proto_rawDesc
)

func file_gocaptcha_service_api_proto_rawDescGZIP() []byte {
	file_gocaptcha_service_api_proto_rawDescOnce.Do(func() {
		file_gocaptcha_service_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_gocaptcha_service_api_proto_rawDescData)
	})
	return file_gocaptcha_service_api_proto_rawDescData
}

var file_gocaptcha_service_api_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_gocaptcha_service_api_proto_goTypes = []interface{}{
	(*GetDataRequest)(nil),     // 0: gocaptcha.GetDataRequest
	(*GetDataResponse)(nil),    // 1: gocaptcha.GetDataResponse
	(*CheckDataRequest)(nil),   // 2: gocaptcha.CheckDataRequest
	(*CheckDataResponse)(nil),  // 3: gocaptcha.CheckDataResponse
	(*StatusInfoRequest)(nil),  // 4: gocaptcha.StatusInfoRequest
	(*StatusInfoResponse)(nil), // 5: gocaptcha.StatusInfoResponse
}
var file_gocaptcha_service_api_proto_depIdxs = []int32{
	0, // 0: gocaptcha.GoCaptchaService.GetData:input_type -> gocaptcha.GetDataRequest
	2, // 1: gocaptcha.GoCaptchaService.CheckData:input_type -> gocaptcha.CheckDataRequest
	4, // 2: gocaptcha.GoCaptchaService.CheckStatus:input_type -> gocaptcha.StatusInfoRequest
	4, // 3: gocaptcha.GoCaptchaService.GetStatusInfo:input_type -> gocaptcha.StatusInfoRequest
	4, // 4: gocaptcha.GoCaptchaService.DelStatusInfo:input_type -> gocaptcha.StatusInfoRequest
	1, // 5: gocaptcha.GoCaptchaService.GetData:output_type -> gocaptcha.GetDataResponse
	3, // 6: gocaptcha.GoCaptchaService.CheckData:output_type -> gocaptcha.CheckDataResponse
	5, // 7: gocaptcha.GoCaptchaService.CheckStatus:output_type -> gocaptcha.StatusInfoResponse
	5, // 8: gocaptcha.GoCaptchaService.GetStatusInfo:output_type -> gocaptcha.StatusInfoResponse
	5, // 9: gocaptcha.GoCaptchaService.DelStatusInfo:output_type -> gocaptcha.StatusInfoResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gocaptcha_service_api_proto_init() }
func file_gocaptcha_service_api_proto_init() {
	if File_gocaptcha_service_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gocaptcha_service_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gocaptcha_service_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gocaptcha_service_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gocaptcha_service_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gocaptcha_service_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gocaptcha_service_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gocaptcha_service_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gocaptcha_service_api_proto_goTypes,
		DependencyIndexes: file_gocaptcha_service_api_proto_depIdxs,
		MessageInfos:      file_gocaptcha_service_api_proto_msgTypes,
	}.Build()
	File_gocaptcha_service_api_proto = out.File
	file_gocaptcha_service_api_proto_rawDesc = nil
	file_gocaptcha_service_api_proto_goTypes = nil
	file_gocaptcha_service_api_proto_depIdxs = nil
}
